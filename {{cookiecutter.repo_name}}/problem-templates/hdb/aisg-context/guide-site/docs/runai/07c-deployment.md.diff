--- {{cookiecutter.repo_name}}/aisg-context/guide-site/docs/runai/07c-deployment.md
+++ {{cookiecutter.repo_name}}/problem-templates/hdb/aisg-context/guide-site/docs/runai/07c-deployment.md
@@ -90,9 +90,9 @@
     ```bash
     conda activate {{cookiecutter.repo_name}}
-    export MODEL_UUID=<MLFLOW_RUN_UUID>
+    export PRED_MODEL_UUID=<MLFLOW_RUN_UUID>
     export MLFLOW_TRACKING_URI=<MLFLOW_TRACKING_URI>
     export MLFLOW_TRACKING_USERNAME=<MLFLOW_TRACKING_USERNAME> # If applicable
     export MLFLOW_TRACKING_PASSWORD=<MLFLOW_TRACKING_PASSWORD> # If applicable
-    python -c "import mlflow; mlflow.artifacts.download_artifacts(artifact_uri='runs:/$MODEL_UUID/', dst_path='models/$MODEL_UUID')"
+    python -c "import mlflow; mlflow.artifacts.download_artifacts(artifact_uri='runs:/$PRED_MODEL_UUID/', dst_path='models/$PRED_MODEL_UUID')"
     ```
 
@@ -100,5 +100,5 @@
 
     ```bash
-    export MODEL_UUID=<MLFLOW_RUN_UUID>
+    export PRED_MODEL_UUID=<MLFLOW_RUN_UUID>
     runai submit \
         --job-name-prefix <YOUR_HYPHENATED_NAME>-download-artifacts \
@@ -110,5 +110,5 @@
         -e MLFLOW_TRACKING_USERNAME=<YOUR_MLFLOW_USERNAME> \
         -e MLFLOW_TRACKING_PASSWORD=<YOUR_MLFLOW_PASSWORD> \
-        --command -- python -c "import mlflow; mlflow.artifacts.download_artifacts(artifact_uri='runs:/$MODEL_UUID/', dst_path='models/$MODEL_UUID')"
+        --command -- python -c "import mlflow; mlflow.artifacts.download_artifacts(artifact_uri='runs:/$PRED_MODEL_UUID/', dst_path='models/$PRED_MODEL_UUID')"
     ```
 
@@ -116,5 +116,11 @@
 experiment run `<MLFLOW_RUN_UUID>` to this repository's subdirectory 
 `models`. However, the specific subdirectory that is relevant for our 
-modules to load will be `./models/<MLFLOW_RUN_UUID>/output.txt`.
+modules to load will be `./models/<MLFLOW_RUN_UUID>/model/xgbreg.json`.
+
+The variables (`PRED_MODEL_UUID` and `PRED_MODEL_PATH`) would be 
+exported as they will be used by the FastAPI server to load the model 
+for prediction. We will get back to this in a bit. For now, let's 
+proceed and spin up an inference server using the package that exists 
+within the repository.
 
 Now, let's proceed and spin up an inference server using the package 
@@ -132,5 +138,6 @@
     # Running in a working `{{cookiecutter.repo_name}}` repository
     conda activate {{cookiecutter.repo_name}}
-    export MODEL_UUID=<MLFLOW_RUN_UUID>
+    export PRED_MODEL_UUID=<MLFLOW_RUN_UUID>
+    export PRED_MODEL_PATH="<NAME_OF_DATA_SOURCE>/workspaces/<YOUR_HYPENATED_NAME>/models/$PRED_MODEL_UUID/model/xgbreg.json"
     gunicorn {{cookiecutter.src_package_name}}_fastapi.main:APP \
         -k uvicorn.workers.UvicornWorker \
@@ -146,5 +153,5 @@
 
     ```bash
-    export MODEL_UUID=<MLFLOW_RUN_UUID>
+    export PRED_MODEL_UUID=<MLFLOW_RUN_UUID>
     runai submit \
         --job-name-prefix <YOUR_HYPHENATED_NAME>-inference \
@@ -153,4 +160,5 @@
         --existing-pvc claimname=<NAME_OF_DATA_SOURCE>,path=/<NAME_OF_DATA_SOURCE> \
         --cpu 2 --cpu-limit 2 --memory 4G --memory-limit 4G --backoff-limit 1 \
+        -e PRED_MODEL_PATH=/<NAME_OF_DATA_SOURCE>/workspaces/<YOUR_HYPENATED_NAME>/models/$PRED_MODEL_UUID/model/xgbreg.json \
         --service-type external-url,port=8080:8080 \
         --command -- gunicorn {{cookiecutter.src_package_name}}_fastapi.main:APP \
@@ -171,15 +179,11 @@
     curl -X POST \
         localhost:8080/api/v1/model/predict \
-        -H 'Content-Type: application/json' \
-        -d '"string"'
+        -H 'Content-Type: multipart/form-data' \
+        -F "csv_file=@/path/to/csv/file"
     ```
   
-Output sample:
-
-```
-{"data":[{"input":"string"}]}
-```
-
-With the returned JSON object, we have successfully submitted a request
+Output sample: The output will be a CSV file with the original columns plus a predictions column.
+
+With the returned CSV file, we have successfully submitted a request
 to the FastAPI server and it returned predictions as part of the
 response.
@@ -196,5 +200,6 @@
 `src/{{cookiecutter.src_package_name}}_fastapi/config.py`. This class 
 contains several fields: some are defined and some others not. The 
-`MODEL_UUID` field inherits their values from the environment variables.
+`PRED_MODEL_UUID` and `PRED_MODEL_PATH` fields inherit their values 
+from the environment variables.
 
 `src/{{cookiecutter.src_package_name}}_fastapi/config.py`:
@@ -207,5 +212,7 @@
     LOGGER_CONFIG_PATH: str = "../conf/logging.yaml"
 
-    MODEL_UUID: str
+    USE_CUDA: bool = False
+    PRED_MODEL_UUID: str = "test"
+    PRED_MODEL_PATH: str
 ...
 ```
