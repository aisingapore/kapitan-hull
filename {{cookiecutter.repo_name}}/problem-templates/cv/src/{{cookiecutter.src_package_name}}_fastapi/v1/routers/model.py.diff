--- {{cookiecutter.repo_name}}/src/{{cookiecutter.src_package_name}}_fastapi/v1/routers/model.py
+++ {{cookiecutter.repo_name}}/problem-templates/cv/src/{{cookiecutter.src_package_name}}_fastapi/v1/routers/model.py
@@ -5,0 +6,2 @@
+import torchvision
+from PIL import Image
@@ -14,0 +17 @@
+DEVICE = {{cookiecutter.src_package_name_short}}_fapi.deps.DEVICE
@@ -18,2 +21,3 @@
-def predict(data: str = fastapi.Body()):
-    """Endpoint that returns the input as-is.
+def classify_image(image_file: fastapi.UploadFile):
+    """Endpoint that returns sentiment classification of movie review
+    texts.
@@ -23,2 +27,2 @@
-    data : str
-        Input text.
+    image_file : fastapi.UploadFile
+        'fastapi.UploadFile' object.
@@ -29 +33 @@
-        Dictionary containing the input string.
+        Dictionary containing the file name and prediction for the image.
@@ -40 +44 @@
-        logger.info("Copying input...")
+        logger.info("Classifying image...")
@@ -42 +46,9 @@
-        pred_str = PRED_MODEL.predict(data)
+        contents = image_file.file.read()
+        with open(image_file.filename, "wb") as buffer:
+            buffer.write(contents)
+        image = Image.open(image_file.filename)
+        image = torchvision.transforms.functional.to_grayscale(image)
+        image = torchvision.transforms.functional.to_tensor(image)
+        output = PRED_MODEL(image.unsqueeze(0).to(DEVICE))
+        pred = output.argmax(dim=1, keepdim=True)
+        pred_str = str(int(pred[0]))
@@ -45 +57 @@
-            {"input": pred_str}
+            {"image_filename": image_file.filename, "prediction": pred_str}
@@ -47 +59,3 @@
-        logger.info("Input: %s", data)
+        logger.info(
+            "Prediction for image filename %s: %s", image_file.filename, pred_str
+        )
@@ -51,0 +66,4 @@
+
+    finally:
+        image_file.file.close()
+        os.remove(image_file.filename)
@@ -58 +76 @@
-    """Get sample version used for the API.
+    """Get version (UUID) of predictive model used for the API.
@@ -63 +81,2 @@
-        Dictionary containing the sample version.
+        Dictionary containing the UUID of the predictive model being
+        served.
@@ -65 +84 @@
-    return {"data": {"model_uuid": {{cookiecutter.src_package_name_short}}_fapi.config.SETTINGS.MODEL_UUID}}
+    return {"data": {"model_uuid": {{cookiecutter.src_package_name_short}}_fapi.config.SETTINGS.PRED_MODEL_UUID}}
