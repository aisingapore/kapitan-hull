default:
  tags:
{%- if cookiecutter.platform == 'onprem' %}
    - on-prem
{%- elif cookiecutter.platform == 'gcp' %}
    - gcp
{%- endif %}
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ./conda
  image:
    name: continuumio/miniconda3:24.7.1-0

stages:
  - test
  - deploy-docs
  - build

test:conda-build:
  stage: test
  script:
    - conda env create -f {{cookiecutter.repo_name}}-conda-env.yaml -p ./conda/{{cookiecutter.repo_name}} -y
  rules:
    - if: $CI_MERGE_REQUEST_IID
      changes:
        - {{cookiecutter.repo_name}}-conda-env.yaml
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - {{cookiecutter.repo_name}}-conda-env.yaml
    - if: $CI_PIPELINE_SOURCE == "web"
      changes:
        - {{cookiecutter.repo_name}}-conda-env.yaml
    - if: $CI_PIPELINE_SOURCE == "web" && $BUILD_CONDA
    - if: $CI_COMMIT_TAG
      when: never
  needs: []

test:pylint:
  stage: test
  before_script:
    - source activate ./conda/{{cookiecutter.repo_name}}
    - pip install -r dev-requirements.txt
  script:
    - pylint src --fail-under=7.0 --ignore=tests --disable=W1202
  rules:
    - if: $CI_MERGE_REQUEST_IID
      changes:
        - src/**/*
        - conf/**/*
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_TAG
      when: never
  needs:
    - job: test:conda-build
      optional: true

test:pytest:
  stage: test
  before_script: 
    - source activate ./conda/{{cookiecutter.repo_name}}
    - pip install -r dev-requirements.txt
  script:
    - pytest src/tests --junitxml=./rspec.xml
  rules:
    - if: $CI_MERGE_REQUEST_IID
      changes:
        - src/**/*
        - conf/**/*
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_TAG
      when: never
  artifacts:
    paths:
      - rspec.xml
    reports:
      junit: rspec.xml
  needs:
    - job: test:conda-build
      optional: true

pages:
  stage: deploy-docs
  before_script:
    - source activate ./conda/{{cookiecutter.repo_name}}
    - pip install -r docs-requirements.txt
  script:
    - sphinx-apidoc -f -o docs src
    - sphinx-build -b html docs public
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - docs/**/*
        - src/**/*
  needs:
    - job: test:conda-build
      optional: true

build:cpu-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
{%- if cookiecutter.platform == 'gcp' %}
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: /kaniko/.docker/config.json
{%- endif %}
  before_script:
{%- if cookiecutter.platform == 'onprem' %}
    - "[[ -z ${HARBOR_ROBOT_CREDS_JSON} ]] && echo 'HARBOR_ROBOT_CREDS_JSON variable is not set.' && exit 1"
{%- elif cookiecutter.platform == 'gcp' %}
    - "[[ -z ${GCP_SERVICE_ACCOUNT_KEY} ]] && echo 'GCP_SERVICE_ACCOUNT_KEY variable is not set.' && exit 1"
{%- endif %}
  script:
    - mkdir -p /kaniko/.docker
{%- if cookiecutter.platform == 'onprem' %}
    - cat $HARBOR_ROBOT_CREDS_JSON > /kaniko/.docker/config.json
{%- elif cookiecutter.platform == 'gcp' %}
    - cat $GCP_SERVICE_ACCOUNT_KEY > /kaniko/.docker/config.json
{%- endif %}
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/{{cookiecutter.repo_name}}-cpu.Dockerfile"
      --destination "{{cookiecutter.registry_project_path}}/cpu:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_MERGE_REQUEST_IID
      changes:
        - docker/{{cookiecutter.repo_name}}-cpu.Dockerfile
        - src/**/*
        - conf/**/*
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web" && $BUILD_ALL
    - if: $CI_PIPELINE_SOURCE == "web" && $BUILD_DATAPREP
  needs:
    - job: test:pytest
      optional: true
    - job: test:pylint
      optional: true

build:gpu-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
{%- if cookiecutter.platform == 'gcp' %}
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: /kaniko/.docker/config.json
{%- endif %}
  before_script:
{%- if cookiecutter.platform == 'onprem' %}
    - "[[ -z ${HARBOR_ROBOT_CREDS_JSON} ]] && echo 'HARBOR_ROBOT_CREDS_JSON variable is not set.' && exit 1"
{%- elif cookiecutter.platform == 'gcp' %}
    - "[[ -z ${GCP_SERVICE_ACCOUNT_KEY} ]] && echo 'GCP_SERVICE_ACCOUNT_KEY variable is not set.' && exit 1"
{%- endif %}
  script:
    - mkdir -p /kaniko/.docker
{%- if cookiecutter.platform == 'onprem' %}
    - cat $HARBOR_ROBOT_CREDS_JSON > /kaniko/.docker/config.json
{%- elif cookiecutter.platform == 'gcp' %}
    - cat $GCP_SERVICE_ACCOUNT_KEY > /kaniko/.docker/config.json
{%- endif %}
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/{{cookiecutter.repo_name}}-gpu.Dockerfile"
      --destination "{{cookiecutter.registry_project_path}}/gpu:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_MERGE_REQUEST_IID
      changes:
        - docker/{{cookiecutter.repo_name}}-gpu.Dockerfile
        - src/**/*
        - conf/**/*
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web" && $BUILD_ALL
    - if: $CI_PIPELINE_SOURCE == "web" && $BUILD_MODEL
  needs:
    - job: test:pytest
      optional: true
    - job: test:pylint
      optional: true

build:retag-images:
  stage: build
  image:
{%- if cookiecutter.platform == 'onprem' %}
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
{%- elif cookiecutter.platform == 'gcp' %}
    name: google/cloud-sdk:debian_component_based
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: /gcp-sa.json
{%- endif %}
  before_script:
{%- if cookiecutter.platform == 'onprem' %}
    - "[[ -z ${HARBOR_ROBOT_CREDS_JSON} ]] && echo 'HARBOR_ROBOT_CREDS_JSON variable is not set.' && exit 1"
{%- elif cookiecutter.platform == 'gcp' %}
    - "[[ -z ${GCP_SERVICE_ACCOUNT_KEY} ]] && echo 'GCP_SERVICE_ACCOUNT_KEY variable is not set.' && exit 1"
{%- endif %}
  script:
{%- if cookiecutter.platform == 'onprem' %}
    - cat $HARBOR_ROBOT_CREDS_JSON > /root/.docker/config.json
    - crane tag {{cookiecutter.registry_project_path}}/cpu:${CI_COMMIT_SHORT_SHA} ${CI_COMMIT_TAG}
    - crane tag {{cookiecutter.registry_project_path}}/gpu:${CI_COMMIT_SHORT_SHA} ${CI_COMMIT_TAG}
{%- elif cookiecutter.platform == 'gcp' %}
    - cat $GCP_SERVICE_ACCOUNT_KEY > /gcp-sa.json
    - gcloud container images add-tag "{{cookiecutter.registry_project_path}}/cpu:${CI_COMMIT_SHORT_SHA}" "{{cookiecutter.registry_project_path}}/data-prep:${CI_COMMIT_TAG}"
    - gcloud container images add-tag "{{cookiecutter.registry_project_path}}/gpu:${CI_COMMIT_SHORT_SHA}" "{{cookiecutter.registry_project_path}}/model-training:${CI_COMMIT_TAG}"
{%- endif %}
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: build:cpu-image
      optional: true
    - job: build:gpu-image
      optional: true